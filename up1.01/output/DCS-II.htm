<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\output\DCS-II.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\output\DCS-II.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Oct 08 18:44:37 2018
<BR><P>
<H3>Maximum Stack Usage =      33152 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; APP_led_task &rArr; APP_led_uptxt &rArr; APP_led_txt &rArr; APP_led_full &rArr; get_chksum16
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">BusFault_Handler</a><BR>
 <LI><a href="#[6]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">UsageFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">DebugMon_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[c0]">delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c0]">delay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[21]">CAN1_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1e]">CAN1_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4c]">CAN2_RX1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4d]">CAN2_SCE_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4a]">CAN2_TX_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[59]">DCMI_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream4_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream4_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream6_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream7_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[48]">ETH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[33]">EXTI15_10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[22]">EXTI9_5_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3b]">FMC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6f]">FProtocolAck</a> from app_comser.o(i.FProtocolAck) referenced from app_network.o(i.NETWORK_RECV_PRTCACK)
 <LI><a href="#[6e]">GET_CSQ</a> from app_network.o(i.GET_CSQ) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[5a]">HASH_RNG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2b]">I2C1_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2a]">I2C1_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[73]">IsKeyDown1</a> from app_key.o(i.IsKeyDown1) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[7c]">IsKeyDown10</a> from app_key.o(i.IsKeyDown10) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[74]">IsKeyDown2</a> from app_key.o(i.IsKeyDown2) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[75]">IsKeyDown3</a> from app_key.o(i.IsKeyDown3) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[76]">IsKeyDown4</a> from app_key.o(i.IsKeyDown4) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[77]">IsKeyDown5</a> from app_key.o(i.IsKeyDown5) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[78]">IsKeyDown6</a> from app_key.o(i.IsKeyDown6) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[79]">IsKeyDown7</a> from app_key.o(i.IsKeyDown7) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[7a]">IsKeyDown8</a> from app_key.o(i.IsKeyDown8) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[7b]">IsKeyDown9</a> from app_key.o(i.IsKeyDown9) referenced from app_key.o(i.bsp_InitKeyVar)
 <LI><a href="#[6c]">LOADFRM_LOGIN</a> from app_sim7600ce.o(i.LOADFRM_LOGIN) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[62]">MG2639DCMD_ATE0_ACK</a> from app_mg2639d.o(i.MG2639DCMD_ATE0_ACK) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[61]">MG2639DCMD_AT_ACK</a> from app_mg2639d.o(i.MG2639DCMD_AT_ACK) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[64]">MG2639DCMD_IPSET_ACK</a> from app_mg2639d.o(i.MG2639DCMD_IPSET_ACK) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[63]">MG2639DCMD_OPENU_ACK</a> from app_mg2639d.o(i.MG2639DCMD_OPENU_ACK) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6d]">NETWORK_SENDDATA_PROTOCOL</a> from app_network.o(i.NETWORK_SENDDATA_PROTOCOL) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_mg2639d.o(i.MG2639DCMD_ATE0_ACK)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_mg2639d.o(i.MG2639DCMD_AT_ACK)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_mg2639d.o(i.MG2639DCMD_OPENU_ACK)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_mg2639d.o(i.MG2639D_SENDAT_CIPSEND)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_network.o(i.NETWORK_RECV)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_ATE0)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPCCFG)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPHEAD)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPMODE)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPOPEN)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPRXGET)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSEND)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSRIP)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_sim7600ce.o(i.SIM7600CE_SENDAT_NETOPEN)
 <LI><a href="#[5f]">NETWORK_SENDU_ASCII</a> from app_network.o(i.NETWORK_SENDU_ASCII) referenced from app_network.o(i.UDP_AT_INIT)
 <LI><a href="#[70]">NETWORK_SENDU_HEX</a> from app_network.o(i.NETWORK_SENDU_HEX) referenced from app_network.o(i.NETWORK_SENDDATA_PROTOCOL)
 <LI><a href="#[2]">NMI_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[4e]">OTG_FS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[35]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[10]">RCC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[34]">RTC_Alarm_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[71]">RxAnsOverErr</a> from app_comser.o(i.RxAnsOverErr) referenced from app_comser.o(i.RxOverDly)
 <LI><a href="#[3c]">SDIO_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[60]">SIM7600CE_SENDAT_ATE0</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_ATE0) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[65]">SIM7600CE_SENDAT_CIPCCFG</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPCCFG) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[67]">SIM7600CE_SENDAT_CIPHEAD</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPHEAD) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[68]">SIM7600CE_SENDAT_CIPMODE</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPMODE) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[6b]">SIM7600CE_SENDAT_CIPOPEN</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPOPEN) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[69]">SIM7600CE_SENDAT_CIPRXGET</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPRXGET) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[66]">SIM7600CE_SENDAT_CIPSRIP</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSRIP) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[6a]">SIM7600CE_SENDAT_NETOPEN</a> from app_sim7600ce.o(i.SIM7600CE_SENDAT_NETOPEN) referenced from app_network.o(i.NETWORK_RECV_ATACK)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[2f]">SPI2_IRQHandler</a> from stm32f4xx_it.o(i.SPI2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[d]">TAMP_STAMP_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[23]">TIM1_BRK_TIM9_IRQHandler</a> from stm32f4xx_it.o(i.TIM1_BRK_TIM9_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[26]">TIM1_CC_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[25]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[24]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[27]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[28]">TIM3_IRQHandler</a> from stm32f4xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[29]">TIM4_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from stm32f4xx_it.o(i.TIM5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from stm32f4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from stm32f4xx_it.o(i.TIM7_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from stm32f4xx_it.o(i.TIM8_BRK_TIM12_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from stm32f4xx_it.o(i.TIM8_CC_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from stm32f4xx_it.o(i.TIM8_TRG_COM_TIM14_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from stm32f4xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from stm32f4xx_it.o(i.UART5_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[32]">USART3_IRQHandler</a> from stm32f4xx_it.o(i.USART3_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[52]">USART6_IRQHandler</a> from stm32f4xx_it.o(i.USART6_IRQHandler) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f407xx.o(.text) referenced from startup_stm32f407xx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f407xx.o(.text)
 <LI><a href="#[72]">_sputc</a> from printf5.o(i._sputc) referenced from printf5.o(i.__0sprintf$5)
 <LI><a href="#[5c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[239]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[93]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[23b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[23c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[23d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[23e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f407xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[223]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ring_buffer_get
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_char
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_invalid
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Restart
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetWkMod
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetUPLmt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrTyp
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrCfg
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetHrtIntvl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevUpd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRtc
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRecIntvl
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRTDReptIntvl
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevPwd
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevLnkReconIntvl
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevIpPort
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevAddr
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryWkMod
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryUPLmt
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQrySnsrTyp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryHrtIntvl
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevaddr
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevVerInfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRtc
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRecIntvl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRTDReptIntvl
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevPwd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevLnkReconIntvl
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevIpPort
</UL>

<P><STRONG><a name="[23f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[240]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSEND
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
</UL>

<P><STRONG><a name="[20c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_beta
</UL>

<P><STRONG><a name="[242]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[db]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevPwd
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_char
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDU_ASCII
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_txt
</UL>

<P><STRONG><a name="[e4]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmain
</UL>

<P><STRONG><a name="[b3]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_alarm_ini
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_default
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_beta
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_beta
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_beta
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_coefficient
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_vector
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[20a]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
</UL>

<P><STRONG><a name="[243]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exchange_row
</UL>

<P><STRONG><a name="[20b]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[244]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[245]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[246]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[248]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[87]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[221]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[249]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[24a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[24b]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>APP_ADC1_convert</STRONG> (Thumb, 524 bytes, Stack size 64 bytes, main.o(i.APP_ADC1_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = APP_ADC1_convert &rArr; HAL_ADC_PollForConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetValue
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>APP_ADC1_ini</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, main.o(i.APP_ADC1_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = APP_ADC1_ini &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>APP_KEY_TASK</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, app_key.o(i.APP_KEY_TASK))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = APP_KEY_TASK
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_GetKey
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>APP_NAND_MDF</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_datrec.o(i.APP_NAND_MDF))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_NAND_MDF &rArr; NAND_IsBadBlock &rArr; FSMC_NAND_ReadSpare &rArr; FSMC_NAND_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IsBadBlock
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WriteSpare
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>APP_UPSNR_CLOSEALARM</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_upsnr.o(i.APP_UPSNR_CLOSEALARM))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = APP_UPSNR_CLOSEALARM &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC7ByLeftByTable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>APP_UPSNR_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_upsnr.o(i.APP_UPSNR_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = APP_UPSNR_Init &rArr; APP_USARTUP_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTUP_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>APP_UPSNR_OPENALARM</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_upsnr.o(i.APP_UPSNR_OPENALARM))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = APP_UPSNR_OPENALARM &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC7ByLeftByTable
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>APP_UPSNR_TASK</STRONG> (Thumb, 478 bytes, Stack size 72 bytes, app_upsnr.o(i.APP_UPSNR_TASK))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = APP_UPSNR_TASK &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC7ByLeftByTable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>APP_USARTUP_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_upsnr.o(i.APP_USARTUP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = APP_USARTUP_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_Init
</UL>

<P><STRONG><a name="[ab]"></a>APP_audio_ini</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_audio.o(i.APP_audio_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_audio_ini
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>APP_audio_stop</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_audio.o(i.APP_audio_stop))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_ErrorCallback
</UL>

<P><STRONG><a name="[af]"></a>APP_calitbl_default</STRONG> (Thumb, 398 bytes, Stack size 20 bytes, main.o(i.APP_calitbl_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APP_calitbl_default
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_ini
</UL>

<P><STRONG><a name="[ad]"></a>APP_calitbl_ini</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.APP_calitbl_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_calitbl_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>APP_calitbl_manage</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(i.APP_calitbl_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_calitbl_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>APP_common_average_weighted</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_sensor.o(i.APP_common_average_weighted))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_raw2value
</UL>

<P><STRONG><a name="[b2]"></a>APP_devinfo_default</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, main.o(i.APP_devinfo_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_devinfo_default
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_ini
</UL>

<P><STRONG><a name="[b4]"></a>APP_devinfo_ini</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(i.APP_devinfo_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_devinfo_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>APP_devinfo_manage</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.APP_devinfo_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_devinfo_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>APP_devver_default</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, main.o(i.APP_devver_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_devver_default
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_ini
</UL>

<P><STRONG><a name="[b6]"></a>APP_devver_ini</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, main.o(i.APP_devver_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = APP_devver_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>APP_devver_manage</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main.o(i.APP_devver_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_devver_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>APP_dustmoninfo_default</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, main.o(i.APP_dustmoninfo_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_dustmoninfo_default
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_ini
</UL>

<P><STRONG><a name="[b9]"></a>APP_dustmoninfo_ini</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.APP_dustmoninfo_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_dustmoninfo_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>APP_dustmoninfo_manage</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.APP_dustmoninfo_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_dustmoninfo_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>APP_floortbl_default</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, main.o(i.APP_floortbl_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_floortbl_default
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_ini
</UL>

<P><STRONG><a name="[bc]"></a>APP_floortbl_ini</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.APP_floortbl_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_floortbl_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>APP_floortbl_manage</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(i.APP_floortbl_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_floortbl_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>APP_fram_WREN</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_fram.o(i.APP_fram_WREN))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = APP_fram_WREN &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
</UL>

<P><STRONG><a name="[c2]"></a>APP_fram_ini</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_fram.o(i.APP_fram_ini))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>APP_fram_readdata</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, app_fram.o(i.APP_fram_readdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_manage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_ini
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_manage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_ini
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_manage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_ini
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_manage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_ini
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_manage
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_ini
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_manage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_ini
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_manage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_ini
</UL>

<P><STRONG><a name="[b0]"></a>APP_fram_writedata</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, app_fram.o(i.APP_fram_writedata))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = APP_fram_writedata &rArr; APP_fram_WREN &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_WREN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_manage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_ini
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_manage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_ini
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_manage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_ini
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_manage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_ini
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_manage
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_ini
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_manage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_ini
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_manage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_ini
</UL>

<P><STRONG><a name="[c4]"></a>APP_led_connect</STRONG> (Thumb, 86 bytes, Stack size 33032 bytes, app_led.o(i.APP_led_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 33056<LI>Call Chain = APP_led_connect &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[c7]"></a>APP_led_del</STRONG> (Thumb, 166 bytes, Stack size 33048 bytes, app_led.o(i.APP_led_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 33072<LI>Call Chain = APP_led_del &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_uptxtdel
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_updel
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_prgmdel
</UL>

<P><STRONG><a name="[c6]"></a>APP_led_full</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, app_led.o(i.APP_led_full))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_chksum16
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_txt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_srt
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrcrtc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrccfg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setlight
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_opt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_del
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_connect
</UL>

<P><STRONG><a name="[ca]"></a>APP_led_ini</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_led.o(i.APP_led_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_led_ini
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>APP_led_opt</STRONG> (Thumb, 366 bytes, Stack size 33048 bytes, app_led.o(i.APP_led_opt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33072<LI>Call Chain = APP_led_opt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_upopt
</UL>

<P><STRONG><a name="[cc]"></a>APP_led_prgmdel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_led.o(i.APP_led_prgmdel))
<BR><BR>[Stack]<UL><LI>Max Depth = 33072<LI>Call Chain = APP_led_prgmdel &rArr; APP_led_del &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_del
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[cd]"></a>APP_led_rcvisr</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, app_led.o(i.APP_led_rcvisr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_led_rcvisr &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_chksum16
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[ce]"></a>APP_led_setlight</STRONG> (Thumb, 96 bytes, Stack size 33032 bytes, app_led.o(i.APP_led_setlight))
<BR><BR>[Stack]<UL><LI>Max Depth = 33056<LI>Call Chain = APP_led_setlight &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[cf]"></a>APP_led_setsrccfg</STRONG> (Thumb, 126 bytes, Stack size 33032 bytes, app_led.o(i.APP_led_setsrccfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 33056<LI>Call Chain = APP_led_setsrccfg &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[d0]"></a>APP_led_setsrcrtc</STRONG> (Thumb, 164 bytes, Stack size 33032 bytes, app_led.o(i.APP_led_setsrcrtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 33056<LI>Call Chain = APP_led_setsrcrtc &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[d3]"></a>APP_led_srt</STRONG> (Thumb, 562 bytes, Stack size 33056 bytes, app_led.o(i.APP_led_srt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33080<LI>Call Chain = APP_led_srt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_upsrt
</UL>

<P><STRONG><a name="[d4]"></a>APP_led_task</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, app_led.o(i.APP_led_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 33136<LI>Call Chain = APP_led_task &rArr; APP_led_uptxt &rArr; APP_led_txt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_uptxtdel
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_uptxt
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_upsrt
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_upopt
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_updel
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrcrtc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrccfg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setlight
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_prgmdel
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>APP_led_txt</STRONG> (Thumb, 590 bytes, Stack size 33080 bytes, app_led.o(i.APP_led_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33104<LI>Call Chain = APP_led_txt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_TLV_length
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_uptxt
</UL>

<P><STRONG><a name="[d5]"></a>APP_led_updel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_led.o(i.APP_led_updel))
<BR><BR>[Stack]<UL><LI>Max Depth = 33072<LI>Call Chain = APP_led_updel &rArr; APP_led_del &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_del
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[dc]"></a>APP_led_upf2a</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, app_led.o(i.APP_led_upf2a))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APP_led_upf2a
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_uptxt
</UL>

<P><STRONG><a name="[d6]"></a>APP_led_upopt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_led.o(i.APP_led_upopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33088<LI>Call Chain = APP_led_upopt &rArr; APP_led_opt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_opt
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[d7]"></a>APP_led_upsrt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_led.o(i.APP_led_upsrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33080<LI>Call Chain = APP_led_upsrt &rArr; APP_led_srt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_srt
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[d9]"></a>APP_led_uptxt</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_led.o(i.APP_led_uptxt))
<BR><BR>[Stack]<UL><LI>Max Depth = 33120<LI>Call Chain = APP_led_uptxt &rArr; APP_led_txt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_upf2a
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_txt
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[d8]"></a>APP_led_uptxtdel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_led.o(i.APP_led_uptxtdel))
<BR><BR>[Stack]<UL><LI>Max Depth = 33072<LI>Call Chain = APP_led_uptxtdel &rArr; APP_led_del &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_del
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
</UL>

<P><STRONG><a name="[de]"></a>APP_limittbl_default</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, main.o(i.APP_limittbl_default))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_ini
</UL>

<P><STRONG><a name="[dd]"></a>APP_limittbl_ini</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, main.o(i.APP_limittbl_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_limittbl_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[df]"></a>APP_limittbl_manage</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, main.o(i.APP_limittbl_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_limittbl_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>APP_mmi_a2f</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, app_mmi.o(i.APP_mmi_a2f))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire2adj
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire1adj
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupweightadj
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupcalikbadj
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrrtc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrlmtcfg
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrcomcfg
</UL>

<P><STRONG><a name="[102]"></a>APP_mmi_ctrabout</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_ctrabout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_mmi_ctrabout
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[105]"></a>APP_mmi_ctradj</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_ctradj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_mmi_ctradj
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[e0]"></a>APP_mmi_ctrcomcfg</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_ctrcomcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_mmi_ctrcomcfg
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[e2]"></a>APP_mmi_ctrlmtcfg</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_ctrlmtcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_mmi_ctrlmtcfg
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[e3]"></a>APP_mmi_ctrmain</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_ctrmain))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_mmi_ctrmain &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[e5]"></a>APP_mmi_ctrmenuadmin</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_ctrmenuadmin))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_mmi_ctrmenuadmin &rArr; APP_devinfo_default
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_default
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_default
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_default
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_default
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_default
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_default
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_default
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[104]"></a>APP_mmi_ctrmenuuser</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_ctrmenuuser))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_mmi_ctrmenuuser
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[106]"></a>APP_mmi_ctroemopt</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, app_mmi.o(i.APP_mmi_ctroemopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_mmi_ctroemopt
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[e7]"></a>APP_mmi_ctrrtc</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_ctrrtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = APP_mmi_ctrrtc &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[ea]"></a>APP_mmi_ctrupcalikbadj</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_ctrupcalikbadj))
<BR><BR>[Stack]<UL><LI>Max Depth = 17880<LI>Call Chain = APP_mmi_ctrupcalikbadj &rArr; get_correctionfactor &rArr; get_beta &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[103]"></a>APP_mmi_ctruploadinginfo</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_ctruploadinginfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_mmi_ctruploadinginfo
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[ec]"></a>APP_mmi_ctrupweightadj</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_ctrupweightadj))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_mmi_ctrupweightadj &rArr; APP_mmi_sortupbyx
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_sortupbyx
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[ee]"></a>APP_mmi_ctrupwire1adj</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_ctrupwire1adj))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_mmi_ctrupwire1adj &rArr; APP_mmi_sortupbyx
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_sortupbyx
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[ef]"></a>APP_mmi_ctrupwire2adj</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_ctrupwire2adj))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = APP_mmi_ctrupwire2adj &rArr; APP_mmi_sortupbyx
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_sortupbyx
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_a2f
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
</UL>

<P><STRONG><a name="[f0]"></a>APP_mmi_display</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = APP_mmi_display &rArr; APP_mmi_scrrtc &rArr; APP_mmi_showrtc &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scruploadinginfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scroemopt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuuser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuadmin
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scradj
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>APP_mmi_f2a</STRONG> (Thumb, 214 bytes, Stack size 28 bytes, app_mmi.o(i.APP_mmi_f2a))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[10d]"></a>APP_mmi_gettext</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, app_mmi.o(i.APP_mmi_gettext))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_mmi_gettext
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[110]"></a>APP_mmi_i2a</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_i2a))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_mmi_i2a
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuuser
</UL>

<P><STRONG><a name="[ff]"></a>APP_mmi_ini</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = APP_mmi_ini &rArr; APP_mmi_scrlogo &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>APP_mmi_input</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 17888<LI>Call Chain = APP_mmi_input &rArr; APP_mmi_ctrupcalikbadj &rArr; get_correctionfactor &rArr; get_beta &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire2adj
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire1adj
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupweightadj
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctruploadinginfo
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupcalikbadj
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrrtc
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctroemopt
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuuser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmain
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrlmtcfg
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrcomcfg
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctradj
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrabout
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>APP_mmi_rcvisr</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_rcvisr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_mmi_rcvisr
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[f3]"></a>APP_mmi_scrabout</STRONG> (Thumb, 862 bytes, Stack size 48 bytes, app_mmi.o(i.APP_mmi_scrabout))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = APP_mmi_scrabout &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_screenupdate
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_gettext
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[fa]"></a>APP_mmi_scradj</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_scradj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_mmi_scradj &rArr; APP_mmi_showtext
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f5]"></a>APP_mmi_scrcomcfg</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, app_mmi.o(i.APP_mmi_scrcomcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = APP_mmi_scrcomcfg &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[108]"></a>APP_mmi_screenupdate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_screenupdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_mmi_screenupdate
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[f6]"></a>APP_mmi_scrlmtcfg</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_scrlmtcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = APP_mmi_scrlmtcfg &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[100]"></a>APP_mmi_scrlogo</STRONG> (Thumb, 660 bytes, Stack size 48 bytes, app_mmi.o(i.APP_mmi_scrlogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = APP_mmi_scrlogo &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showrtc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_screenupdate
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_gettext
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ini
</UL>

<P><STRONG><a name="[f1]"></a>APP_mmi_scrmain</STRONG> (Thumb, 688 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_scrmain))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = APP_mmi_scrmain &rArr; APP_mmi_showrtc &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showrtc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_screenupdate
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f7]"></a>APP_mmi_scrmenuadmin</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_scrmenuadmin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_mmi_scrmenuadmin &rArr; APP_mmi_showtext
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f8]"></a>APP_mmi_scrmenuuser</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_scrmenuuser))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_mmi_scrmenuuser &rArr; APP_mmi_i2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f9]"></a>APP_mmi_scroemopt</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_scroemopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_mmi_scroemopt &rArr; APP_mmi_showtext
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f2]"></a>APP_mmi_scrrtc</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, app_mmi.o(i.APP_mmi_scrrtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = APP_mmi_scrrtc &rArr; APP_mmi_showrtc &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showrtc
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[fe]"></a>APP_mmi_scrupcalikbadj</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_scrupcalikbadj))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_mmi_scrupcalikbadj &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[f4]"></a>APP_mmi_scruploadinginfo</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, app_mmi.o(i.APP_mmi_scruploadinginfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_mmi_scruploadinginfo &rArr; APP_mmi_showtext
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showicon
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[fb]"></a>APP_mmi_scrupweightadj</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_scrupweightadj))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_mmi_scrupweightadj &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[fc]"></a>APP_mmi_scrupwire1adj</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_scrupwire1adj))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_mmi_scrupwire1adj &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[fd]"></a>APP_mmi_scrupwire2adj</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_scrupwire2adj))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = APP_mmi_scrupwire2adj &rArr; APP_mmi_f2a
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext_batch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showtext
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showscreen
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_i2a
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_f2a
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
</UL>

<P><STRONG><a name="[10c]"></a>APP_mmi_showicon</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_showicon))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_mmi_showicon
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scruploadinginfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scroemopt
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[10f]"></a>APP_mmi_showrtc</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, app_mmi.o(i.APP_mmi_showrtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_mmi_showrtc &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
</UL>

<P><STRONG><a name="[109]"></a>APP_mmi_showscreen</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, app_mmi.o(i.APP_mmi_showscreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_mmi_showscreen
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scruploadinginfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scroemopt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuuser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuadmin
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scradj
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[10e]"></a>APP_mmi_showtext</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, app_mmi.o(i.APP_mmi_showtext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_mmi_showtext
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scruploadinginfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scroemopt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuuser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuadmin
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scradj
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[10a]"></a>APP_mmi_showtext_batch</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, app_mmi.o(i.APP_mmi_showtext_batch))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APP_mmi_showtext_batch
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
</UL>

<P><STRONG><a name="[ed]"></a>APP_mmi_sortupbyx</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, app_mmi.o(i.APP_mmi_sortupbyx))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APP_mmi_sortupbyx
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire2adj
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupwire1adj
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupweightadj
</UL>

<P><STRONG><a name="[e6]"></a>APP_notice_default</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.APP_notice_default))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrmenuadmin
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_ini
</UL>

<P><STRONG><a name="[111]"></a>APP_notice_ini</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(i.APP_notice_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_notice_ini &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_default
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[112]"></a>APP_notice_manage</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.APP_notice_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_notice_manage &rArr; APP_fram_readdata &rArr; HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>APP_sensor_alarm_ini</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_sensor.o(i.APP_sensor_alarm_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_sensor_alarm_ini
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11a]"></a>APP_sensor_alarmcheck</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, app_sensor.o(i.APP_sensor_alarmcheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_sensor_alarmcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_raw2value
</UL>

<P><STRONG><a name="[115]"></a>APP_sensor_clearalarmbuf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_sensor.o(i.APP_sensor_clearalarmbuf))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
</UL>

<P><STRONG><a name="[236]"></a>APP_sensor_dat_ini</STRONG> (Thumb, 282 bytes, Stack size 12 bytes, app_sensor.o(i.APP_sensor_dat_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_sensor_dat_ini
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[114]"></a>APP_sensor_findalarm</STRONG> (Thumb, 1128 bytes, Stack size 72 bytes, app_sensor.o(i.APP_sensor_findalarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = APP_sensor_findalarm &rArr; APP_UPSNR_OPENALARM &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_clearalarmbuf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_OPENALARM
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_CLOSEALARM
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[116]"></a>APP_sensor_gpio_ini</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_sensor.o(i.APP_sensor_gpio_ini))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_sensor_gpio_ini
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[117]"></a>APP_sensor_gpio_update</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_sensor.o(i.APP_sensor_gpio_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_sensor_gpio_update
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[11b]"></a>APP_sensor_linear_interpolation</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_sensor.o(i.APP_sensor_linear_interpolation))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_sensor_linear_interpolation
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_raw2value
</UL>

<P><STRONG><a name="[118]"></a>APP_sensor_raw2value</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, app_sensor.o(i.APP_sensor_raw2value))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = APP_sensor_raw2value &rArr; APP_sensor_linear_interpolation
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_linear_interpolation
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_alarmcheck
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_common_average_weighted
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[11c]"></a>APP_sensor_savprdvalue</STRONG> (Thumb, 316 bytes, Stack size 64 bytes, app_sensor.o(i.APP_sensor_savprdvalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = APP_sensor_savprdvalue &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>APP_sensor_sendprdvalue</STRONG> (Thumb, 316 bytes, Stack size 64 bytes, app_sensor.o(i.APP_sensor_sendprdvalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = APP_sensor_sendprdvalue &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>APP_sensor_sendrawdat</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, app_sensor.o(i.APP_sensor_sendrawdat))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_sensor_sendrawdat &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>APP_sensor_stateupdate</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, app_sensor.o(i.APP_sensor_stateupdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_sensor_stateupdate
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[237]"></a>APP_sensor_value_ini</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, app_sensor.o(i.APP_sensor_value_ini))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[238]"></a>APP_sensor_valvestat_ini</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_sensor.o(i.APP_sensor_valvestat_ini))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>APP_sensor_wklpchk</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, app_sensor.o(i.APP_sensor_wklpchk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = APP_sensor_wklpchk &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_wklpvalue_update
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[121]"></a>APP_sensor_wklpvalue_update</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, app_sensor.o(i.APP_sensor_wklpvalue_update))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_wklpchk
</UL>

<P><STRONG><a name="[122]"></a>AUFFngrDat</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_prtc.o(i.AUFFngrDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AUFFngrDat &rArr; GetRTC &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDat
</UL>

<P><STRONG><a name="[126]"></a>AUFUPPlatRTDat</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, app_prtc.o(i.AUFUPPlatRTDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AUFUPPlatRTDat &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatRtDat
</UL>

<P><STRONG><a name="[127]"></a>AUFUPPlatWrnDat</STRONG> (Thumb, 622 bytes, Stack size 24 bytes, app_prtc.o(i.AUFUPPlatWrnDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AUFUPPlatWrnDat &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatWrnDat
</UL>

<P><STRONG><a name="[202]"></a>Add2RxSerArray</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_comser.o(i.Add2RxSerArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Add2RxSerArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxOverDly
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_PRTCACK
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_ATACK
</UL>

<P><STRONG><a name="[1e9]"></a>Add2TxSerArray</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, app_comser.o(i.Add2TxSerArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Add2TxSerArray
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxAnsOverErr
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSEND
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPRXGET
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPOPEN
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPMODE
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPHEAD
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPCCFG
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_ATE0
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_AT_INIT
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDDATA_PROTOCOL
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_OPENU_ACK
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_AT_ACK
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_ATE0_ACK
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_NETOPEN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSRIP
</UL>

<P><STRONG><a name="[129]"></a>ComRxSeverExc</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app_comser.o(i.ComRxSeverExc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ComRxSeverExc
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSer_Main
</UL>

<P><STRONG><a name="[128]"></a>ComSer_Main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_comser.o(i.ComSer_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ComSer_Main &rArr; ComTxSeverExc &rArr; StartTimeoutCnt &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTxSeverExc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComRxSeverExc
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_TASK
</UL>

<P><STRONG><a name="[1fd]"></a>ComSeverInit</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, app_comser.o(i.ComSeverInit))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_INIT
</UL>

<P><STRONG><a name="[12a]"></a>ComTxSeverExc</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, app_comser.o(i.ComTxSeverExc))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ComTxSeverExc &rArr; StartTimeoutCnt &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimeoutCnt
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FProtocolAck
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSer_Main
</UL>

<P><STRONG><a name="[12c]"></a>DATREC_EXC</STRONG> (Thumb, 286 bytes, Stack size 1056 bytes, app_datrec.o(i.DATREC_EXC))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096<LI>Call Chain = DATREC_EXC &rArr; NAND_MarkBadBlock &rArr; FSMC_NAND_WriteSpare &rArr; FSMC_NAND_WritePage &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IsBadBlock
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_MarkBadBlock
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IsBufOk
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WriteData
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadPage
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadData
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_EraseBlock
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA1_Stream4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA1_Stream4_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA2_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[136]"></a>FNGR_DeletChar</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_finger.o(i.FNGR_DeletChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FNGR_DeletChar &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
</UL>

<P><STRONG><a name="[139]"></a>FNGR_DowChar</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, app_finger.o(i.FNGR_DowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FNGR_DowChar &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct2frame
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSum
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[13c]"></a>FNGR_Empty</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_finger.o(i.FNGR_Empty))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FNGR_Empty &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
</UL>

<P><STRONG><a name="[13d]"></a>FNGR_ReadNotepad</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, app_finger.o(i.FNGR_ReadNotepad))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FNGR_ReadNotepad &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[138]"></a>FNGR_Recv_Frame</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_finger.o(i.FNGR_Recv_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FNGR_Recv_Frame &rArr; HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame2struct
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_WriteNotepad
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Store
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_ReadNotepad
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Empty
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DeletChar
</UL>

<P><STRONG><a name="[137]"></a>FNGR_Send_Frame</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_finger.o(i.FNGR_Send_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;struct2frame
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSum
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_WriteNotepad
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Store
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_ReadNotepad
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Empty
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DeletChar
</UL>

<P><STRONG><a name="[140]"></a>FNGR_Store</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_finger.o(i.FNGR_Store))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FNGR_Store &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[141]"></a>FNGR_WriteNotepad</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_finger.o(i.FNGR_WriteNotepad))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FNGR_WriteNotepad &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[6f]"></a>FProtocolAck</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_comser.o(i.FProtocolAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FProtocolAck
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTxSeverExc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_PRTCACK)
</UL>
<P><STRONG><a name="[1ac]"></a>FSMC_NAND_AttributeSpace_Timing_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NAND_AttributeSpace_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NAND_AttributeSpace_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_Init
</UL>

<P><STRONG><a name="[1ab]"></a>FSMC_NAND_CommonSpace_Timing_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NAND_CommonSpace_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NAND_CommonSpace_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_Init
</UL>

<P><STRONG><a name="[1aa]"></a>FSMC_NAND_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_ll_fsmc.o(i.FSMC_NAND_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NAND_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_Init
</UL>

<P><STRONG><a name="[148]"></a>FrmDevAddrDatQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevAddrDatQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevAddrDatQry &rArr; ParamQryDevaddr &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[14b]"></a>FrmDevAddrDatSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevAddrDatSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevAddrDatSet &rArr; ParamSetDevAddr &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[14d]"></a>FrmDevHrtIntvlQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevHrtIntvlQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = FrmDevHrtIntvlQry &rArr; ParamQryHrtIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryHrtIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[14f]"></a>FrmDevHrtIntvlSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevHrtIntvlSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = FrmDevHrtIntvlSet &rArr; ParamSetHrtIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetHrtIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[151]"></a>FrmDevIpPortQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevIpPortQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevIpPortQry &rArr; ParamQryDevIpPort &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevIpPort
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[153]"></a>FrmDevIpPortSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevIpPortSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevIpPortSet &rArr; ParamSetDevIpPort &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevIpPort
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[155]"></a>FrmDevLnkReconIntvlQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevLnkReconIntvlQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = FrmDevLnkReconIntvlQry &rArr; ParamQryDevLnkReconIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevLnkReconIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[157]"></a>FrmDevLnkReconIntvlSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevLnkReconIntvlSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = FrmDevLnkReconIntvlSet &rArr; ParamSetDevLnkReconIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevLnkReconIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[159]"></a>FrmDevPwdQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevPwdQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevPwdQry &rArr; ParamQryDevPwd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevPwd
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[15b]"></a>FrmDevPwdSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevPwdSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevPwdSet &rArr; ParamSetDevPwd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevPwd
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[15d]"></a>FrmDevRtcDatSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevRtcDatSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrmDevRtcDatSet &rArr; ParamSetDevRtc &rArr; SetRTC &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRtc
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[15f]"></a>FrmDevRtcQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevRtcQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FrmDevRtcQry &rArr; ParamQryDevRtc &rArr; GetRTC &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRtc
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[161]"></a>FrmDevRtdRptIntvlQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevRtdRptIntvlQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = FrmDevRtdRptIntvlQry &rArr; ParamQryDevRTDReptIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRTDReptIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[163]"></a>FrmDevRtdRptIntvlSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevRtdRptIntvlSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = FrmDevRtdRptIntvlSet &rArr; ParamSetDevRTDReptIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRTDReptIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[165]"></a>FrmDevSavIntvlQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSavIntvlQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = FrmDevSavIntvlQry &rArr; ParamQryDevRecIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRecIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[167]"></a>FrmDevSavIntvlSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSavIntvlSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = FrmDevSavIntvlSet &rArr; ParamSetDevRecIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRecIntvl
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[169]"></a>FrmDevSnsrCfgQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSnsrCfgQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevSnsrCfgQry &rArr; ParamQrySnsrTyp &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQrySnsrTyp
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[16b]"></a>FrmDevSnsrCfgSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSnsrCfgSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = FrmDevSnsrCfgSet &rArr; ParamSetSnsrCfg &rArr; frame_invalid &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[16d]"></a>FrmDevSnsrTypQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSnsrTypQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevSnsrTypQry &rArr; ParamQrySnsrTyp &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQrySnsrTyp
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[16e]"></a>FrmDevSnsrTypSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevSnsrTypSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevSnsrTypSet &rArr; ParamSetSnsrTyp &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrTyp
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[170]"></a>FrmDevUpdSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevUpdSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevUpdSet &rArr; ParamSetDevUpd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevUpd
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[172]"></a>FrmDevVerInfoQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevVerInfoQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevVerInfoQry &rArr; ParamQryDevVerInfo &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevVerInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[174]"></a>FrmDevWkModQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevWkModQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmDevWkModQry &rArr; ParamQryWkMod &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryWkMod
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[176]"></a>FrmDevWkModSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmDevWkModSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmDevWkModSet &rArr; ParamSetWkMod &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetWkMod
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[178]"></a>FrmFngrDat</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_prtc.o(i.FrmFngrDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FrmFngrDat &rArr; AUFFngrDat &rArr; GetRTC &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFFngrDat
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>

<P><STRONG><a name="[179]"></a>FrmFngrDatDel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmFngrDatDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FrmFngrDatDel &rArr; Param_Del_FngrDat &rArr; FNGR_WriteNotepad &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[17b]"></a>FrmFngrDatSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmFngrDatSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = FrmFngrDatSet &rArr; ParamSetFngrDat &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mrtn2frame
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[17e]"></a>FrmHrtDat</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_prtc.o(i.FrmHrtDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmHrtDat &rArr; frame_link_chk &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_link_chk
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>

<P><STRONG><a name="[180]"></a>FrmLnkLog</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_prtc.o(i.FrmLnkLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FrmLnkLog &rArr; frame_link_chk &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_link_chk
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOADFRM_LOGIN
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_IPSET_ACK
</UL>

<P><STRONG><a name="[181]"></a>FrmRestart</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FrmRestart &rArr; Param_Restart &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[183]"></a>FrmUPLmtQry</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmUPLmtQry))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = FrmUPLmtQry &rArr; ParamQryUPLmt &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryUPLmt
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[185]"></a>FrmUPLmtSet</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_prtc.o(i.FrmUPLmtSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = FrmUPLmtSet &rArr; ParamSetUPLmt &rArr; UnPacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetUPLmt
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
</UL>

<P><STRONG><a name="[187]"></a>FrmUPPlatRtDat</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_prtc.o(i.FrmUPPlatRtDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = FrmUPPlatRtDat &rArr; GetUPPlatRTData &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUPPlatRTData
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatRTDat
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>

<P><STRONG><a name="[189]"></a>FrmUPPlatWrnDat</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_prtc.o(i.FrmUPPlatWrnDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = FrmUPPlatWrnDat &rArr; GetUPPlatWrnDat &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtn2frame
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUPPlatWrnDat
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatWrnDat
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>

<P><STRONG><a name="[6e]"></a>GET_CSQ</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_network.o(i.GET_CSQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GET_CSQ &rArr; __ring_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ring_buffer_get
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StringToDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[18c]"></a>GSM_StringToDec</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_network.o(i.GSM_StringToDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GSM_StringToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CSQ
</UL>

<P><STRONG><a name="[125]"></a>GetCRC</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, app_prtc.o(i.GetCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC7ByLeftByTable
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_link_chk
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_invalid
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Restart
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetWkMod
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetUPLmt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrTyp
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrCfg
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetHrtIntvl
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevUpd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRtc
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRecIntvl
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRTDReptIntvl
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevPwd
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevLnkReconIntvl
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevIpPort
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevAddr
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryWkMod
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryUPLmt
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQrySnsrTyp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryHrtIntvl
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevaddr
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevVerInfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRtc
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRecIntvl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRTDReptIntvl
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevPwd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevLnkReconIntvl
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevIpPort
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatWrnDat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatRTDat
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFFngrDat
</UL>

<P><STRONG><a name="[a2]"></a>GetCRC7ByLeftByTable</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, app_crc.o(i.GetCRC7ByLeftByTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetCRC7ByLeftByTable
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_OPENALARM
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_CLOSEALARM
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
</UL>

<P><STRONG><a name="[18d]"></a>GetIPHost</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, app_prtc.o(i.GetIPHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GetIPHost &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_OPENU_ACK
</UL>

<P><STRONG><a name="[234]"></a>GetProtocolVersion</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_prtc.o(i.GetProtocolVersion))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
</UL>

<P><STRONG><a name="[124]"></a>GetRTC</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_prtc.o(i.GetRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetRTC &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRtc
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFFngrDat
</UL>

<P><STRONG><a name="[13b]"></a>GetSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_finger.o(i.GetSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSum
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame2struct
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
</UL>

<P><STRONG><a name="[233]"></a>GetTAddr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_prtc.o(i.GetTAddr))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
</UL>

<P><STRONG><a name="[188]"></a>GetUPPlatRTData</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, app_prtc.o(i.GetUPPlatRTData))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GetUPPlatRTData &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatRtDat
</UL>

<P><STRONG><a name="[18a]"></a>GetUPPlatWrnDat</STRONG> (Thumb, 602 bytes, Stack size 24 bytes, app_prtc.o(i.GetUPPlatWrnDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = GetUPPlatWrnDat &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatWrnDat
</UL>

<P><STRONG><a name="[96]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 282 bytes, Stack size 12 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_ini
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_convert
</UL>

<P><STRONG><a name="[99]"></a>HAL_ADC_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_convert
</UL>

<P><STRONG><a name="[9b]"></a>HAL_ADC_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_ini
</UL>

<P><STRONG><a name="[190]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, stm32f4xx_hal_msp.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[98]"></a>HAL_ADC_PollForConversion</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_PollForConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_ADC_PollForConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_convert
</UL>

<P><STRONG><a name="[97]"></a>HAL_ADC_Start</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Start))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_convert
</UL>

<P><STRONG><a name="[135]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 3940 bytes, Stack size 40 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>

<P><STRONG><a name="[193]"></a>HAL_DMA_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[192]"></a>HAL_GPIO_Init</STRONG> (Thumb, 400 bytes, Stack size 36 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FSMC_MspInit
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKeyHard
</UL>

<P><STRONG><a name="[145]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadPage
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_pow_on
</UL>

<P><STRONG><a name="[ac]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_WREN
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_gpio_update
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_gpio_ini
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_ini
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_audio_ini
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_PRTCACK
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_pow_on
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_pow_on
</UL>

<P><STRONG><a name="[a9]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_stateupdate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_rcvisr
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_rcvisr
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_init
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_pow_on
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_pow_on
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>

<P><STRONG><a name="[195]"></a>HAL_I2S_ErrorCallback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.HAL_I2S_ErrorCallback))
<BR><BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_audio_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_IRQHandler
</UL>

<P><STRONG><a name="[197]"></a>HAL_I2S_IRQHandler</STRONG> (Thumb, 664 bytes, Stack size 32 bytes, stm32f4xx_hal_i2s.o(i.HAL_I2S_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_I2S_IRQHandler &rArr; I2SEx_TransmitReceive_IT &rArr; HAL_I2S_TxCpltCallback &rArr; HAL_I2S_Transmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_TxCpltCallback
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_ErrorCallback
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SEx_TransmitReceive_IT
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
</UL>

<P><STRONG><a name="[19b]"></a>HAL_I2S_Init</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, stm32f4xx_hal_i2s.o(i.HAL_I2S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_I2S_Init &rArr; HAL_I2S_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19c]"></a>HAL_I2S_MspInit</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, stm32f4xx_hal_msp.o(i.HAL_I2S_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_I2S_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_Init
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_I2S_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_i2s.o(i.HAL_I2S_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SEx_TransmitReceive_IT
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Receive_IT
</UL>

<P><STRONG><a name="[19f]"></a>HAL_I2S_Transmit_IT</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, stm32f4xx_hal_i2s.o(i.HAL_I2S_Transmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2S_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_TxCpltCallback
</UL>

<P><STRONG><a name="[199]"></a>HAL_I2S_TxCpltCallback</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, main.o(i.HAL_I2S_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2S_TxCpltCallback &rArr; HAL_I2S_Transmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_Transmit_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_IRQHandler
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2SEx_TransmitReceive_IT
</UL>

<P><STRONG><a name="[1a0]"></a>HAL_IWDG_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32f4xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a1]"></a>HAL_IWDG_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(i.HAL_IWDG_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
</UL>

<P><STRONG><a name="[214]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1a2]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a4]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1a5]"></a>HAL_MspInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1a8]"></a>HAL_NAND_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_hal_nand.o(i.HAL_NAND_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_NAND_Init &rArr; HAL_NAND_MspInit &rArr; HAL_FSMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_MspInit
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_CommonSpace_Timing_Init
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_AttributeSpace_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FSMC_Init
</UL>

<P><STRONG><a name="[1a9]"></a>HAL_NAND_MspInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(i.HAL_NAND_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_NAND_MspInit &rArr; HAL_FSMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FSMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_Init
</UL>

<P><STRONG><a name="[134]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_TIM14_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_TIM12_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_TIM9_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_IRQHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>

<P><STRONG><a name="[19e]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19d]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_MspInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1a3]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1ae]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1af]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1a6]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1b1]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1b2]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1b0]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[1b3]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_MCOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_RCC_MCOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1b4]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 802 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1b5]"></a>HAL_RNG_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_hal_rng.o(i.HAL_RNG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RNG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b6]"></a>HAL_RNG_MspInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(i.HAL_RNG_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_Init
</UL>

<P><STRONG><a name="[235]"></a>HAL_RTCEx_SetCalibrationOutPut</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc_ex.o(i.HAL_RTCEx_SetCalibrationOutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTCEx_SetCalibrationOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showrtc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_wklpchk
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendrawdat
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendprdvalue
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_savprdvalue
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTC
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrcrtc
</UL>

<P><STRONG><a name="[d1]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_showrtc
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_wklpchk
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendrawdat
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendprdvalue
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_savprdvalue
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTC
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrcrtc
</UL>

<P><STRONG><a name="[1b8]"></a>HAL_RTC_Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b9]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(i.HAL_RTC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[e9]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrrtc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRTC
</UL>

<P><STRONG><a name="[e8]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrrtc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRTC
</UL>

<P><STRONG><a name="[1bc]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[1bd]"></a>HAL_SPI_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
</UL>

<P><STRONG><a name="[1be]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, stm32f4xx_hal_msp.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[c3]"></a>HAL_SPI_Receive</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_Receive &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>

<P><STRONG><a name="[c1]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_WREN
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
</UL>

<P><STRONG><a name="[1bf]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[1c1]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[1a7]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1c2]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SYSTICK_IRQHandler &rArr; HAL_SYSTICK_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1da]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1f2]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c3]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimeoutCnt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c4]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, stm32f4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[213]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimeoutCnt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[142]"></a>HAL_TIM_Base_Stop_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Stop_IT))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FProtocolAck
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxOverDly
</UL>

<P><STRONG><a name="[1c6]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 662 bytes, Stack size 20 bytes, main.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_TIM_IC_ConfigChannel</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_TIM_IC_ConfigChannel &rArr; TIM_TI1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
</UL>

<P><STRONG><a name="[1ce]"></a>HAL_TIM_IC_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_IC_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
</UL>

<P><STRONG><a name="[1cf]"></a>HAL_TIM_IC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
</UL>

<P><STRONG><a name="[1d0]"></a>HAL_TIM_IC_Start</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IC_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d2]"></a>HAL_TIM_IC_Start_IT</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IC_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d3]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_TRG_COM_TIM14_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_BRK_TIM12_IRQHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_TIM9_IRQHandler
</UL>

<P><STRONG><a name="[1d5]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 604 bytes, Stack size 32 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_KeyScan
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxOverDly
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_raw2value
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_gpio_update
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_TIM_SlaveConfigSynchronization</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_SlaveConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_SlaveConfigSynchronization &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
</UL>

<P><STRONG><a name="[1d9]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[1de]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, main.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1df]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>HAL_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTUP_Init
</UL>

<P><STRONG><a name="[1e3]"></a>HAL_UART_MspInit</STRONG> (Thumb, 294 bytes, Stack size 48 bytes, stm32f4xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[13e]"></a>HAL_UART_Receive</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>

<P><STRONG><a name="[a6]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_rcvisr
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ini
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_rcvisr
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_ini
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_AT_INIT
</UL>

<P><STRONG><a name="[1e6]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; APP_led_rcvisr &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_rcvisr
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_rcvisr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[a3]"></a>HAL_UART_Transmit</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlogo
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_OPENALARM
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_CLOSEALARM
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
</UL>

<P><STRONG><a name="[c9]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire2adj
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupwire1adj
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupweightadj
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scruploadinginfo
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrupcalikbadj
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrrtc
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scroemopt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuuser
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmenuadmin
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrmain
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrlmtcfg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrcomcfg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scradj
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_scrabout
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDU_HEX
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDU_ASCII
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>

<P><STRONG><a name="[1e2]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, main.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[19a]"></a>I2SEx_TransmitReceive_IT</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, stm32f4xx_hal_i2s_ex.o(i.I2SEx_TransmitReceive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2SEx_TransmitReceive_IT &rArr; HAL_I2S_TxCpltCallback &rArr; HAL_I2S_Transmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_TxCpltCallback
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>LOADFRM_LOGIN</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_sim7600ce.o(i.LOADFRM_LOGIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LOADFRM_LOGIN &rArr; NETWORK_SENDAT_CIPSEND &rArr; SIM7600CE_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmLnkLog
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDAT_CIPSEND
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[62]"></a>MG2639DCMD_ATE0_ACK</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_mg2639d.o(i.MG2639DCMD_ATE0_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MG2639DCMD_ATE0_ACK &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[61]"></a>MG2639DCMD_AT_ACK</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_mg2639d.o(i.MG2639DCMD_AT_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MG2639DCMD_AT_ACK &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[64]"></a>MG2639DCMD_IPSET_ACK</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_mg2639d.o(i.MG2639DCMD_IPSET_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MG2639DCMD_IPSET_ACK &rArr; MG2639D_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmLnkLog
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[63]"></a>MG2639DCMD_OPENU_ACK</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, app_mg2639d.o(i.MG2639DCMD_OPENU_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MG2639DCMD_OPENU_ACK &rArr; GetIPHost &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPHost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[1ea]"></a>MG2639D_SENDAT_CIPSEND</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, app_mg2639d.o(i.MG2639D_SENDAT_CIPSEND))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MG2639D_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_AT_SENDDATA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDAT_CIPSEND
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639DCMD_IPSET_ACK
</UL>

<P><STRONG><a name="[1eb]"></a>MG2639D_pow_on</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, app_mg2639d.o(i.MG2639D_pow_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MG2639D_pow_on
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_AT_INIT
</UL>

<P><STRONG><a name="[9f]"></a>NAND_IsBadBlock</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_datrec.o(i.NAND_IsBadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NAND_IsBadBlock &rArr; FSMC_NAND_ReadSpare &rArr; FSMC_NAND_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadSpare
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_NAND_MDF
</UL>

<P><STRONG><a name="[1f7]"></a>NETWORK_AT_SENDDATA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_network.o(i.NETWORK_AT_SENDDATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NETWORK_AT_SENDDATA &rArr; SIM7600CE_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSEND
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxAnsOverErr
</UL>

<P><STRONG><a name="[1f9]"></a>NETWORK_CHKRPT</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_network.o(i.NETWORK_CHKRPT))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = NETWORK_CHKRPT &rArr; FrmUPPlatWrnDat &rArr; GetUPPlatWrnDat &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatWrnDat
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatRtDat
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmHrtDat
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDat
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDAT_CIPSEND
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_TASK
</UL>

<P><STRONG><a name="[1fa]"></a>NETWORK_INIT</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_network.o(i.NETWORK_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NETWORK_INIT &rArr; TIP_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSeverInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;statemachine_init
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxAnsOverErr
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fe]"></a>NETWORK_RECV</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_network.o(i.NETWORK_RECV))
<BR><BR>[Stack]<UL><LI>Max Depth = 8308<LI>Call Chain = NETWORK_RECV &rArr; NETWORK_RECV_ATACK &rArr; cmp_char &rArr; my_arrayarray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_ATACK
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_TASK
</UL>

<P><STRONG><a name="[1ff]"></a>NETWORK_RECV_ATACK</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, app_network.o(i.NETWORK_RECV_ATACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8284<LI>Call Chain = NETWORK_RECV_ATACK &rArr; cmp_char &rArr; my_arrayarray
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2RxSerArray
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_char
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV
</UL>

<P><STRONG><a name="[200]"></a>NETWORK_RECV_DATAFRAME</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, app_network.o(i.NETWORK_RECV_DATAFRAME))
<BR><BR>[Stack]<UL><LI>Max Depth = 8268<LI>Call Chain = NETWORK_RECV_DATAFRAME &rArr; cmp_char &rArr; my_arrayarray
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_char
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_PRTCACK
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_StringToDec
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV
</UL>

<P><STRONG><a name="[204]"></a>NETWORK_RECV_DOWN</STRONG> (Thumb, 524 bytes, Stack size 16 bytes, app_network.o(i.NETWORK_RECV_DOWN))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = NETWORK_RECV_DOWN &rArr; FrmUPLmtQry &rArr; ParamQryUPLmt &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtSet
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtQry
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRestart
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatSet
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatDel
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModSet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModQry
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevVerInfoQry
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevUpdSet
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypSet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypQry
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgSet
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgQry
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlSet
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlQry
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlSet
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlQry
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcQry
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcDatSet
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdSet
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdQry
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlSet
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlQry
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortSet
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortQry
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlSet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlQry
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatSet
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatQry
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDAT_CIPSEND
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
</UL>

<P><STRONG><a name="[205]"></a>NETWORK_RECV_PRTCACK</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_network.o(i.NETWORK_RECV_PRTCACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NETWORK_RECV_PRTCACK &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2RxSerArray
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
</UL>

<P><STRONG><a name="[1e8]"></a>NETWORK_SENDAT_CIPSEND</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_network.o(i.NETWORK_SENDAT_CIPSEND))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NETWORK_SENDAT_CIPSEND &rArr; SIM7600CE_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSEND
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOADFRM_LOGIN
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DOWN
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>

<P><STRONG><a name="[6d]"></a>NETWORK_SENDDATA_PROTOCOL</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, app_network.o(i.NETWORK_SENDDATA_PROTOCOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NETWORK_SENDDATA_PROTOCOL &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[5f]"></a>NETWORK_SENDU_ASCII</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_network.o(i.NETWORK_SENDU_ASCII))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NETWORK_SENDU_ASCII
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 15]<UL><LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_ATE0)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPCCFG)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPHEAD)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPMODE)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPOPEN)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPRXGET)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSEND)
<LI> app_network.o(i.NETWORK_RECV)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSRIP)
<LI> app_sim7600ce.o(i.SIM7600CE_SENDAT_NETOPEN)
<LI> app_network.o(i.UDP_AT_INIT)
<LI> app_mg2639d.o(i.MG2639DCMD_ATE0_ACK)
<LI> app_mg2639d.o(i.MG2639DCMD_AT_ACK)
<LI> app_mg2639d.o(i.MG2639DCMD_OPENU_ACK)
<LI> app_mg2639d.o(i.MG2639D_SENDAT_CIPSEND)
</UL>
<P><STRONG><a name="[70]"></a>NETWORK_SENDU_HEX</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_network.o(i.NETWORK_SENDU_HEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NETWORK_SENDU_HEX
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_SENDDATA_PROTOCOL)
</UL>
<P><STRONG><a name="[206]"></a>NETWORK_TASK</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_network.o(i.NETWORK_TASK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8316<LI>Call Chain = NETWORK_TASK &rArr; NETWORK_RECV &rArr; NETWORK_RECV_ATACK &rArr; cmp_char &rArr; my_arrayarray
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComSer_Main
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_AT_INIT
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_CHKRPT
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[208]"></a>PackBCD</STRONG> (Thumb, 454 bytes, Stack size 96 bytes, app_bcd.o(i.PackBCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryHrtIntvl
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRecIntvl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRTDReptIntvl
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevLnkReconIntvl
</UL>

<P><STRONG><a name="[18f]"></a>PacksBCD</STRONG> (Thumb, 488 bytes, Stack size 96 bytes, app_bcd.o(i.PacksBCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryUPLmt
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUPPlatWrnDat
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUPPlatRTData
</UL>

<P><STRONG><a name="[152]"></a>ParamQryDevIpPort</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevIpPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamQryDevIpPort &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortQry
</UL>

<P><STRONG><a name="[156]"></a>ParamQryDevLnkReconIntvl</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevLnkReconIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ParamQryDevLnkReconIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlQry
</UL>

<P><STRONG><a name="[15a]"></a>ParamQryDevPwd</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, app_prtc.o(i.ParamQryDevPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamQryDevPwd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdQry
</UL>

<P><STRONG><a name="[162]"></a>ParamQryDevRTDReptIntvl</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevRTDReptIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ParamQryDevRTDReptIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlQry
</UL>

<P><STRONG><a name="[166]"></a>ParamQryDevRecIntvl</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevRecIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ParamQryDevRecIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlQry
</UL>

<P><STRONG><a name="[160]"></a>ParamQryDevRtc</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_prtc.o(i.ParamQryDevRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ParamQryDevRtc &rArr; GetRTC &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRTC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcQry
</UL>

<P><STRONG><a name="[173]"></a>ParamQryDevVerInfo</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevVerInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamQryDevVerInfo &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevVerInfoQry
</UL>

<P><STRONG><a name="[149]"></a>ParamQryDevaddr</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryDevaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamQryDevaddr &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatQry
</UL>

<P><STRONG><a name="[14e]"></a>ParamQryHrtIntvl</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryHrtIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ParamQryHrtIntvl &rArr; PackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlQry
</UL>

<P><STRONG><a name="[16a]"></a>ParamQrySnsrTyp</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQrySnsrTyp))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamQrySnsrTyp &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypQry
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgQry
</UL>

<P><STRONG><a name="[184]"></a>ParamQryUPLmt</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, app_prtc.o(i.ParamQryUPLmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ParamQryUPLmt &rArr; PacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtQry
</UL>

<P><STRONG><a name="[175]"></a>ParamQryWkMod</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_prtc.o(i.ParamQryWkMod))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamQryWkMod &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModQry
</UL>

<P><STRONG><a name="[14c]"></a>ParamSetDevAddr</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamSetDevAddr &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatSet
</UL>

<P><STRONG><a name="[154]"></a>ParamSetDevIpPort</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevIpPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamSetDevIpPort &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortSet
</UL>

<P><STRONG><a name="[158]"></a>ParamSetDevLnkReconIntvl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevLnkReconIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ParamSetDevLnkReconIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlSet
</UL>

<P><STRONG><a name="[15c]"></a>ParamSetDevPwd</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamSetDevPwd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdSet
</UL>

<P><STRONG><a name="[164]"></a>ParamSetDevRTDReptIntvl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevRTDReptIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ParamSetDevRTDReptIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlSet
</UL>

<P><STRONG><a name="[168]"></a>ParamSetDevRecIntvl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetDevRecIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ParamSetDevRecIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlSet
</UL>

<P><STRONG><a name="[15e]"></a>ParamSetDevRtc</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_prtc.o(i.ParamSetDevRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ParamSetDevRtc &rArr; SetRTC &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRTC
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcDatSet
</UL>

<P><STRONG><a name="[171]"></a>ParamSetDevUpd</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_prtc.o(i.ParamSetDevUpd))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ParamSetDevUpd &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevUpdSet
</UL>

<P><STRONG><a name="[17c]"></a>ParamSetFngrDat</STRONG> (Thumb, 652 bytes, Stack size 72 bytes, app_prtc.o(i.ParamSetFngrDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ParamSetFngrDat &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;novar_print
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_WriteNotepad
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Store
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_ReadNotepad
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatSet
</UL>

<P><STRONG><a name="[150]"></a>ParamSetHrtIntvl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetHrtIntvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ParamSetHrtIntvl &rArr; UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlSet
</UL>

<P><STRONG><a name="[16c]"></a>ParamSetSnsrCfg</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetSnsrCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ParamSetSnsrCfg &rArr; frame_invalid &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_invalid
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgSet
</UL>

<P><STRONG><a name="[16f]"></a>ParamSetSnsrTyp</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetSnsrTyp))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamSetSnsrTyp &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypSet
</UL>

<P><STRONG><a name="[186]"></a>ParamSetUPLmt</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetUPLmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ParamSetUPLmt &rArr; UnPacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtSet
</UL>

<P><STRONG><a name="[177]"></a>ParamSetWkMod</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_prtc.o(i.ParamSetWkMod))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ParamSetWkMod &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModSet
</UL>

<P><STRONG><a name="[17a]"></a>Param_Del_FngrDat</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, app_prtc.o(i.Param_Del_FngrDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Param_Del_FngrDat &rArr; FNGR_WriteNotepad &rArr; FNGR_Send_Frame &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_WriteNotepad
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_ReadNotepad
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Empty
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DeletChar
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatDel
</UL>

<P><STRONG><a name="[182]"></a>Param_Restart</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_prtc.o(i.Param_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Param_Restart &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRestart
</UL>

<P><STRONG><a name="[1b7]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[1bb]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[1ba]"></a>RTC_EnterInitMode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[1dc]"></a>RxOverDly</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_comser.o(i.RxOverDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2RxSerArray
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[60]"></a>SIM7600CE_SENDAT_ATE0</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_ATE0))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_ATE0 &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[65]"></a>SIM7600CE_SENDAT_CIPCCFG</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPCCFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPCCFG &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[67]"></a>SIM7600CE_SENDAT_CIPHEAD</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPHEAD))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPHEAD &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[68]"></a>SIM7600CE_SENDAT_CIPMODE</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPMODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPMODE &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[6b]"></a>SIM7600CE_SENDAT_CIPOPEN</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPOPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPOPEN &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[69]"></a>SIM7600CE_SENDAT_CIPRXGET</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPRXGET))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPRXGET &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[1f8]"></a>SIM7600CE_SENDAT_CIPSEND</STRONG> (Thumb, 182 bytes, Stack size 96 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSEND))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SIM7600CE_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_AT_SENDDATA
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_SENDAT_CIPSEND
</UL>

<P><STRONG><a name="[66]"></a>SIM7600CE_SENDAT_CIPSRIP</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_CIPSRIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_CIPSRIP &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[6a]"></a>SIM7600CE_SENDAT_NETOPEN</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_SENDAT_NETOPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SIM7600CE_SENDAT_NETOPEN &rArr; Add2TxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_network.o(i.NETWORK_RECV_ATACK)
</UL>
<P><STRONG><a name="[212]"></a>SIM7600CE_pow_on</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_sim7600ce.o(i.SIM7600CE_pow_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SIM7600CE_pow_on
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDP_AT_INIT
</UL>

<P><STRONG><a name="[2f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SPI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI2_IRQHandler &rArr; HAL_I2S_IRQHandler &rArr; I2SEx_TransmitReceive_IT &rArr; HAL_I2S_TxCpltCallback &rArr; HAL_I2S_Transmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20e]"></a>SetRTC</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_prtc.o(i.SetRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SetRTC &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRtc
</UL>

<P><STRONG><a name="[12b]"></a>StartTimeoutCnt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_comser.o(i.StartTimeoutCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = StartTimeoutCnt &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComTxSeverExc
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler &rArr; HAL_SYSTICK_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[215]"></a>SystemClock_Config</STRONG> (Thumb, 138 bytes, Stack size 96 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_MCOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM1_BRK_TIM9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM1_BRK_TIM9_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM5_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM7_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM8_BRK_TIM12_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM8_BRK_TIM12_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM8_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM8_CC_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM8_TRG_COM_TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TIM8_TRG_COM_TIM14_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback &rArr; RxOverDly &rArr; Add2RxSerArray
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[1c5]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[1d1]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start
</UL>

<P><STRONG><a name="[1cc]"></a>TIM_TI1_SetConfig</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_TI1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[203]"></a>TIP_frame_get</STRONG> (Thumb, 650 bytes, Stack size 24 bytes, app_prtc.o(i.TIP_frame_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = TIP_frame_get &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ring_buffer_get
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC7ByLeftByTable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
</UL>

<P><STRONG><a name="[1fc]"></a>TIP_init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, app_prtc.o(i.TIP_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIP_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_INIT
</UL>

<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART5_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[207]"></a>UDP_AT_INIT</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_network.o(i.UDP_AT_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UDP_AT_INIT &rArr; MG2639D_pow_on
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_pow_on
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_pow_on
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_TASK
</UL>

<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART3_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART6_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USART6_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f407xx.o(RESET)
</UL>
<P><STRONG><a name="[20d]"></a>UnPackBCD</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, app_bcd.o(i.UnPackBCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = UnPackBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetHrtIntvl
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRecIntvl
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRTDReptIntvl
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevLnkReconIntvl
</UL>

<P><STRONG><a name="[211]"></a>UnPacksBCD</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, app_bcd.o(i.UnPacksBCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = UnPacksBCD &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetUPLmt
</UL>

<P><STRONG><a name="[216]"></a>__0sprintf$5</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[24d]"></a>__1sprintf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5), UNUSED)

<P><STRONG><a name="[18e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0sprintf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIPHost
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM7600CE_SENDAT_CIPSEND
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MG2639D_SENDAT_CIPSEND
</UL>

<P><STRONG><a name="[222]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[22b]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exchange_row
</UL>

<P><STRONG><a name="[209]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPacksBCD
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnPackBCD
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacksBCD
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackBCD
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[220]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[21a]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[218]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[21e]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[21b]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[21f]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[18b]"></a>__ring_buffer_get</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, app_fifo.o(i.__ring_buffer_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ring_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIP_frame_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_CSQ
</UL>

<P><STRONG><a name="[24e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[24f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[250]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[219]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[9d]"></a>bsp_GetKey</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_key.o(i.bsp_GetKey))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KEY_TASK
</UL>

<P><STRONG><a name="[226]"></a>bsp_InitKey</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_key.o(i.bsp_InitKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = bsp_InitKey &rArr; bsp_InitKeyHard &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKeyVar
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKeyHard
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1db]"></a>bsp_KeyScan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_key.o(i.bsp_KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_KeyScan &rArr; bsp_DetectKey
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DetectKey
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[225]"></a>bsp_PutKey</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_key.o(i.bsp_PutKey))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DetectKey
</UL>

<P><STRONG><a name="[201]"></a>cmp_char</STRONG> (Thumb, 162 bytes, Stack size 8216 bytes, app_network.o(i.cmp_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 8236<LI>Call Chain = cmp_char &rArr; my_arrayarray
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_arrayarray
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_DATAFRAME
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_RECV_ATACK
</UL>

<P><STRONG><a name="[231]"></a>create_Ab</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, app_linear.o(i.create_Ab))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = create_Ab
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[c0]"></a>delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.delay))
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_WREN
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_readdata
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[22a]"></a>exchange_row</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, app_linear.o(i.exchange_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = exchange_row &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
</UL>

<P><STRONG><a name="[21d]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[13f]"></a>frame2struct</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, app_finger.o(i.frame2struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = frame2struct &rArr; GetSum
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSum
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Recv_Frame
</UL>

<P><STRONG><a name="[210]"></a>frame_invalid</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_prtc.o(i.frame_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = frame_invalid &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrCfg
</UL>

<P><STRONG><a name="[17f]"></a>frame_link_chk</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_prtc.o(i.frame_link_chk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = frame_link_chk &rArr; GetCRC &rArr; GetCRC7ByLeftByTable
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;link_layer_pack
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmLnkLog
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmHrtDat
</UL>

<P><STRONG><a name="[c5]"></a>get_TLV_length</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_led.o(i.get_TLV_length))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_txt
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_srt
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrcrtc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setsrccfg
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_setlight
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_opt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_del
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_connect
</UL>

<P><STRONG><a name="[22d]"></a>get_alpha</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, app_linear.o(i.get_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = get_alpha &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[22e]"></a>get_beta</STRONG> (Thumb, 342 bytes, Stack size 8832 bytes, app_linear.o(i.get_beta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8920<LI>Call Chain = get_beta &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[c8]"></a>get_chksum16</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_led.o(i.get_chksum16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_chksum16
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_rcvisr
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_full
</UL>

<P><STRONG><a name="[22f]"></a>get_coefficient</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, app_linear.o(i.get_coefficient))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = get_coefficient &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[eb]"></a>get_correctionfactor</STRONG> (Thumb, 142 bytes, Stack size 8920 bytes, app_linear.o(i.get_correctionfactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 17840<LI>Call Chain = get_correctionfactor &rArr; get_beta &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;guass_elimination
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_vector
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_coefficient
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_beta
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_alpha
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_Ab
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ctrupcalikbadj
</UL>

<P><STRONG><a name="[230]"></a>get_vector</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app_linear.o(i.get_vector))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_vector &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[232]"></a>guass_elimination</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, app_linear.o(i.guass_elimination))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = guass_elimination &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exchange_row
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_correctionfactor
</UL>

<P><STRONG><a name="[123]"></a>link_layer_pack</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, app_prtc.o(i.link_layer_pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = link_layer_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTAddr
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetProtocolVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_link_chk
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frame_invalid
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Restart
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_Del_FngrDat
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetWkMod
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetUPLmt
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrTyp
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetSnsrCfg
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetHrtIntvl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevUpd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRtc
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRecIntvl
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevRTDReptIntvl
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevPwd
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevLnkReconIntvl
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevIpPort
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetDevAddr
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryWkMod
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryUPLmt
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQrySnsrTyp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryHrtIntvl
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevaddr
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevVerInfo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRtc
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRecIntvl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevRTDReptIntvl
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevPwd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevLnkReconIntvl
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamQryDevIpPort
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatWrnDat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFUPPlatRTDat
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUFFngrDat
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 1292 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 33152<LI>Call Chain = main &rArr; APP_led_task &rArr; APP_led_uptxt &rArr; APP_led_txt &rArr; APP_led_full &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM9_Init
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM12_Init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI3_Init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FSMC_Init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKey
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_TASK
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_INIT
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_SetCalibrationOutPut
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RNG_Init
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_wklpchk
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_valvestat_ini
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_value_ini
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_stateupdate
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendrawdat
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_sendprdvalue
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_savprdvalue
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_gpio_ini
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_findalarm
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_dat_ini
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_sensor_alarm_ini
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_input
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_ini
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_mmi_display
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_task
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_led_ini
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_writedata
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_fram_ini
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_audio_ini
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_TASK
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_OPENALARM
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_UPSNR_CLOSEALARM
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_NAND_MDF
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_KEY_TASK
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_manage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_notice_ini
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_manage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_limittbl_ini
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_manage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_floortbl_ini
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_manage
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_dustmoninfo_ini
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_manage
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devver_ini
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_manage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_devinfo_ini
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_manage
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_calitbl_ini
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_ini
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ADC1_convert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[17d]"></a>mrtn2frame</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, app_prtc.o(i.mrtn2frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mrtn2frame
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatSet
</UL>

<P><STRONG><a name="[229]"></a>my_arrayarray</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, app_network.o(i.my_arrayarray))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = my_arrayarray
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_char
</UL>

<P><STRONG><a name="[20f]"></a>novar_print</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_network.o(i.novar_print))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParamSetFngrDat
</UL>

<P><STRONG><a name="[14a]"></a>rtn2frame</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, app_prtc.o(i.rtn2frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rtn2frame
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatWrnDat
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPPlatRtDat
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtSet
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmUPLmtQry
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmRestart
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmLnkLog
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmHrtDat
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDatDel
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmFngrDat
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModSet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevWkModQry
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevVerInfoQry
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevUpdSet
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypSet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrTypQry
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgSet
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSnsrCfgQry
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlSet
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevSavIntvlQry
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlSet
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtdRptIntvlQry
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcQry
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevRtcDatSet
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdSet
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevPwdQry
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlSet
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevLnkReconIntvlQry
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortSet
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevIpPortQry
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlSet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevHrtIntvlQry
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatSet
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrmDevAddrDatQry
</UL>

<P><STRONG><a name="[21c]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[1fb]"></a>statemachine_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_network.o(i.statemachine_init))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_INIT
</UL>

<P><STRONG><a name="[13a]"></a>struct2frame</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, app_finger.o(i.struct2frame))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_DowChar
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FNGR_Send_Frame
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[194]"></a>HAL_FSMC_MspInit</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, stm32f4xx_hal_msp.o(i.HAL_FSMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_FSMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_MspInit
</UL>

<P><STRONG><a name="[1ec]"></a>MX_ADC1_Init</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, main.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ed]"></a>MX_FSMC_Init</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, main.o(i.MX_FSMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_FSMC_Init &rArr; HAL_NAND_Init &rArr; HAL_NAND_MspInit &rArr; HAL_FSMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NAND_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ee]"></a>MX_GPIO_Init</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ef]"></a>MX_SPI3_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, main.o(i.MX_SPI3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MX_SPI3_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f0]"></a>MX_TIM12_Init</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, main.o(i.MX_TIM12_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MX_TIM12_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f1]"></a>MX_TIM2_Init</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, main.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f3]"></a>MX_TIM3_Init</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, main.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f4]"></a>MX_TIM5_Init</STRONG> (Thumb, 126 bytes, Stack size 72 bytes, main.o(i.MX_TIM5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = MX_TIM5_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f5]"></a>MX_TIM8_Init</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, main.o(i.MX_TIM8_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = MX_TIM8_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f6]"></a>MX_TIM9_Init</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, main.o(i.MX_TIM9_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MX_TIM9_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>RxAnsOverErr</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_comser.o(i.RxAnsOverErr))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = RxAnsOverErr &rArr; NETWORK_AT_SENDDATA &rArr; SIM7600CE_SENDAT_CIPSEND &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_AT_SENDDATA
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add2TxSerArray
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETWORK_INIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_comser.o(i.RxOverDly)
</UL>
<P><STRONG><a name="[12f]"></a>FSMC_NAND_EraseBlock</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_datrec.o(i.FSMC_NAND_EraseBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NAND_EraseBlock &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[143]"></a>FSMC_NAND_GetStatus</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_datrec.o(i.FSMC_NAND_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WritePage
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_EraseBlock
</UL>

<P><STRONG><a name="[130]"></a>FSMC_NAND_ReadData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_datrec.o(i.FSMC_NAND_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[12d]"></a>FSMC_NAND_ReadPage</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_datrec.o(i.FSMC_NAND_ReadPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NAND_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadSpare
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[146]"></a>FSMC_NAND_ReadSpare</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_datrec.o(i.FSMC_NAND_ReadSpare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NAND_ReadSpare &rArr; FSMC_NAND_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_ReadPage
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_IsBadBlock
</UL>

<P><STRONG><a name="[144]"></a>FSMC_NAND_ReadStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_datrec.o(i.FSMC_NAND_ReadStatus))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_GetStatus
</UL>

<P><STRONG><a name="[132]"></a>FSMC_NAND_WriteData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_datrec.o(i.FSMC_NAND_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FSMC_NAND_WriteData &rArr; FSMC_NAND_WritePage &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[147]"></a>FSMC_NAND_WritePage</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_datrec.o(i.FSMC_NAND_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FSMC_NAND_WritePage &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WriteSpare
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WriteData
</UL>

<P><STRONG><a name="[a0]"></a>FSMC_NAND_WriteSpare</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_datrec.o(i.FSMC_NAND_WriteSpare))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FSMC_NAND_WriteSpare &rArr; FSMC_NAND_WritePage &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NAND_MarkBadBlock
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_NAND_MDF
</UL>

<P><STRONG><a name="[12e]"></a>NAND_IsBufOk</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_datrec.o(i.NAND_IsBufOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NAND_IsBufOk
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[133]"></a>NAND_MarkBadBlock</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_datrec.o(i.NAND_MarkBadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NAND_MarkBadBlock &rArr; FSMC_NAND_WriteSpare &rArr; FSMC_NAND_WritePage &rArr; FSMC_NAND_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NAND_WriteSpare
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DATREC_EXC
</UL>

<P><STRONG><a name="[73]"></a>IsKeyDown1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown1))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown9
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[7c]"></a>IsKeyDown10</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_key.o(i.IsKeyDown10))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsKeyDown10
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[74]"></a>IsKeyDown2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown2))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown9
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[75]"></a>IsKeyDown3</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown3))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[76]"></a>IsKeyDown4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown4))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[77]"></a>IsKeyDown5</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown5))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[78]"></a>IsKeyDown6</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown6))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[79]"></a>IsKeyDown7</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown7))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[7a]"></a>IsKeyDown8</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key.o(i.IsKeyDown8))
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[7b]"></a>IsKeyDown9</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_key.o(i.IsKeyDown9))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsKeyDown9
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsKeyDown1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key.o(i.bsp_InitKeyVar)
</UL>
<P><STRONG><a name="[224]"></a>bsp_DetectKey</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, app_key.o(i.bsp_DetectKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_DetectKey
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_PutKey
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_KeyScan
</UL>

<P><STRONG><a name="[228]"></a>bsp_InitKeyHard</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, app_key.o(i.bsp_InitKeyHard))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_InitKeyHard &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKey
</UL>

<P><STRONG><a name="[227]"></a>bsp_InitKeyVar</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, app_key.o(i.bsp_InitKeyVar))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bsp_InitKeyVar
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_InitKey
</UL>

<P><STRONG><a name="[1e0]"></a>UART_Receive_IT</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_RxCpltCallback &rArr; APP_led_rcvisr &rArr; get_chksum16
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1e4]"></a>UART_SetConfig</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[1e1]"></a>UART_Transmit_IT</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1e5]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[1ad]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[191]"></a>ADC_Init</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[198]"></a>I2S_Receive_IT</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_hal_i2s.o(i.I2S_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2S_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2S_IRQHandler
</UL>

<P><STRONG><a name="[1c0]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[1c7]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1ca]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1c8]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1c9]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchronization
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[1cd]"></a>TIM_TI2_SetConfig</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TI2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[217]"></a>_printf_core</STRONG> (Thumb, 658 bytes, Stack size 104 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$5
</UL>

<P><STRONG><a name="[72]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf5.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0sprintf$5)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
